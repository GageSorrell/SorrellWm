#pragma once

#include <functional>
#include <unordered_map>
#include <vector>
#include <string>

template<typename EventType>
class FEventDispatcher
{
public:
    using ListenerId = size_t;
    using Listener = std::function<void(EventType)>;

    ListenerId RegisterListener(Listener Listener);

    void UnregisterListener(ListenerId Id);

    void DispatchEvent(EventType Event);
private:
    ListenerId NextListenerId = 0;
    std::unordered_map<std::string, std::vector<std::pair<ListenerID, Listener>>> Listeners;
};
